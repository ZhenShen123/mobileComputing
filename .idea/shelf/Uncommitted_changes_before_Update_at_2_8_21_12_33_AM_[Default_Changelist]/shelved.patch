Index: app/src/main/java/com/hw/hwauthenticate/utils/Constants.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hw.hwauthenticate.utils\n\n/**\n * same keys save here\n */\nclass Constants {\n\n    companion object{\n\n        const val USER_ID_KEY = \"100_\"\n\n        const val USER_NAME_KEY = \"200_\"\n\n        const val USER_AVATAR_KEY = \"300_\"\n\n        const val USER_BIRTH_KEY = \"400_\"\n\n        const val CURRENT_USER_DATA_KEY = \"current_user\"\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>US-ASCII
===================================================================
--- app/src/main/java/com/hw/hwauthenticate/utils/Constants.kt	(revision c814bf5c22e7feb87ff499a4d91153c039a97f12)
+++ app/src/main/java/com/hw/hwauthenticate/utils/Constants.kt	(date 1612714814000)
@@ -15,6 +15,8 @@
 
         const val USER_BIRTH_KEY = "400_"
 
+        const val USER_PSW_KEY = "500_"
+
         const val CURRENT_USER_DATA_KEY = "current_user"
     }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_register.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    tools:context=\".RegisterActivity\">\n\n    <ImageView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"backPage\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:src=\"@drawable/vector_arrow_back\"\n        />\n\n    <EditText\n        android:id=\"@+id/username\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"24dp\"\n        android:layout_marginTop=\"96dp\"\n        android:layout_marginEnd=\"24dp\"\n        android:hint=\"@string/prompt_user_name\"\n        android:selectAllOnFocus=\"true\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <EditText\n        android:id=\"@+id/password\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"24dp\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_marginEnd=\"24dp\"\n        android:hint=\"@string/prompt_password\"\n        android:imeOptions=\"actionDone\"\n        android:inputType=\"textPassword\"\n        android:selectAllOnFocus=\"true\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/username\" />\n\n    <Button\n        android:id=\"@+id/b_register\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"16dp\"\n        android:text=\"@string/action_register\"\n        android:textAllCaps=\"false\"\n        android:onClick=\"register\"\n        app:layout_constraintEnd_toEndOf=\"@+id/username\"\n        app:layout_constraintStart_toStartOf=\"@+id/username\"\n        app:layout_constraintTop_toBottomOf=\"@+id/password\" />\n\n    <androidx.core.widget.ContentLoadingProgressBar\n        android:id=\"@+id/loading\"\n        style=\"?android:attr/progressBarStyleLarge\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        tools:visibility=\"visible\" />\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_register.xml	(revision c814bf5c22e7feb87ff499a4d91153c039a97f12)
+++ app/src/main/res/layout/activity_register.xml	(date 1612715223000)
@@ -1,9 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    android:orientation="vertical"
     android:paddingLeft="@dimen/activity_horizontal_margin"
     android:paddingTop="@dimen/activity_vertical_margin"
     android:paddingRight="@dimen/activity_horizontal_margin"
@@ -14,27 +15,32 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:onClick="backPage"
-        app:layout_constraintTop_toTopOf="parent"
+        android:src="@drawable/vector_arrow_back"
         app:layout_constraintStart_toStartOf="parent"
-        android:src="@drawable/vector_arrow_back"
-        />
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <ImageView
+        android:id="@+id/iv_head"
+        android:layout_width="80dp"
+        android:layout_height="80dp"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginTop="60dp"
+        android:onClick="selectPhoto"
+        android:src="@drawable/icon_user" />
 
     <EditText
         android:id="@+id/username"
-        android:layout_width="0dp"
+        android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_marginStart="24dp"
-        android:layout_marginTop="96dp"
+        android:layout_marginTop="16dp"
         android:layout_marginEnd="24dp"
         android:hint="@string/prompt_user_name"
-        android:selectAllOnFocus="true"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        android:selectAllOnFocus="true" />
 
     <EditText
         android:id="@+id/password"
-        android:layout_width="0dp"
+        android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_marginStart="24dp"
         android:layout_marginTop="8dp"
@@ -47,27 +53,28 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/username" />
 
+
+    <TextView
+        android:id="@+id/tv_select_birth"
+        android:layout_width="match_parent"
+        android:layout_height="40dp"
+        android:layout_marginStart="24dp"
+        android:layout_marginTop="5dp"
+        android:layout_marginEnd="24dp"
+        android:gravity="center_vertical"
+        android:hint="@string/select_the_date_of_birth"
+        android:onClick="selectBirthDate" />
+
     <Button
         android:id="@+id/b_register"
-        android:layout_width="0dp"
+        android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_marginTop="16dp"
+        android:onClick="register"
         android:text="@string/action_register"
         android:textAllCaps="false"
-        android:onClick="register"
         app:layout_constraintEnd_toEndOf="@+id/username"
         app:layout_constraintStart_toStartOf="@+id/username"
         app:layout_constraintTop_toBottomOf="@+id/password" />
 
-    <androidx.core.widget.ContentLoadingProgressBar
-        android:id="@+id/loading"
-        style="?android:attr/progressBarStyleLarge"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:visibility="gone"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:visibility="visible" />
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/hw/hwauthenticate/RegisterActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hw.hwauthenticate\n\nimport android.os.Bundle\nimport android.text.TextUtils\nimport android.view.View\nimport androidx.appcompat.app.AppCompatActivity\nimport com.hw.hwauthenticate.utils.ExpandUtils.toast\nimport com.hw.hwauthenticate.utils.SpUtils\nimport kotlinx.android.synthetic.main.activity_login.*\n\nclass RegisterActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_register)\n    }\n\n    fun register(view: View) {\n        if (TextUtils.isEmpty(username.text)) {\n            toast(this, getString(R.string.action_empty_username))\n            return\n        }\n        if (TextUtils.isEmpty(password.text)) {\n            toast(this, getString(R.string.action_empty_password))\n            return\n        }\n        SpUtils.putString(username.text.toString(), username.text.toString())\n        toast(this, getString(R.string.action_empty_password))\n        finish()\n    }\n\n    fun backPage(view: View) {\n        finish()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/hw/hwauthenticate/RegisterActivity.kt	(revision c814bf5c22e7feb87ff499a4d91153c039a97f12)
+++ app/src/main/java/com/hw/hwauthenticate/RegisterActivity.kt	(date 1612715223000)
@@ -1,15 +1,31 @@
 package com.hw.hwauthenticate
 
+import android.app.Activity
+import android.app.DatePickerDialog
+import android.content.Intent
+import android.net.Uri
 import android.os.Bundle
+import android.os.Environment
+import android.provider.MediaStore
 import android.text.TextUtils
 import android.view.View
 import androidx.appcompat.app.AppCompatActivity
+import com.hw.hwauthenticate.utils.Constants
 import com.hw.hwauthenticate.utils.ExpandUtils.toast
 import com.hw.hwauthenticate.utils.SpUtils
 import kotlinx.android.synthetic.main.activity_login.*
+import kotlinx.android.synthetic.main.activity_person_center.*
+import java.io.File
+import java.io.FileOutputStream
+import java.text.SimpleDateFormat
+import java.util.*
 
 class RegisterActivity : AppCompatActivity() {
 
+    private val mRequestCode = 110
+    private var mFilePath: String? = null
+    private var mBirthDay: String? = null
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_register)
@@ -24,12 +40,93 @@
             toast(this, getString(R.string.action_empty_password))
             return
         }
-        SpUtils.putString(username.text.toString(), username.text.toString())
-        toast(this, getString(R.string.action_empty_password))
+        val userId = Constants.USER_ID_KEY + username.text.toString()
+        //save user id key
+        SpUtils.putString(Constants.USER_ID_KEY, userId)
+        //save user name
+        SpUtils.putString(Constants.USER_NAME_KEY + userId, username.text.toString())
+        //save password
+        SpUtils.putString(Constants.USER_PSW_KEY + userId, username.text.toString())
+        //save current user id
+        SpUtils.putString(
+                Constants.CURRENT_USER_DATA_KEY, Constants.USER_ID_KEY + username.text.toString()
+        )
+        //save avatar
+        if (mFilePath != null) {
+            SpUtils.putString(Constants.USER_AVATAR_KEY + userId, mFilePath!!)
+        }
+        //save birth
+        if (mBirthDay != null) {
+            SpUtils.putString(Constants.USER_BIRTH_KEY + userId, mBirthDay!!)
+        }
+        setResult(RESULT_OK)
         finish()
     }
 
+    fun selectBirthDate(view: View) {
+
+        val calendar = Calendar.getInstance()
+        val dataDialog = DatePickerDialog(
+                this, { view, year, month, dayOfMonth ->
+            calendar.set(year, month, dayOfMonth, 0, 0)
+            val date = Date()
+            date.time = calendar.time.time
+            tv_select_birth.text =
+                    SimpleDateFormat("yyyy-MM-dd", Locale.getDefault()).format(date)
+            mBirthDay = tv_select_birth.text.toString()
+        },
+                calendar[Calendar.YEAR],
+                calendar[Calendar.MONTH],
+                calendar[Calendar.DAY_OF_MONTH]
+        )
+        dataDialog.show()
+    }
+
+
+    fun selectPhoto(view: View) {
+        val intent = Intent(
+                Intent.ACTION_PICK,
+                MediaStore.Images.Media.EXTERNAL_CONTENT_URI
+        )
+        startActivityForResult(intent, mRequestCode)
+    }
+
+
+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
+        super.onActivityResult(requestCode, resultCode, data)
+        if (requestCode == mRequestCode && resultCode == Activity.RESULT_OK && null != data) {
+            val selectedImage: Uri? = data.data
+            iv_head.setImageURI(selectedImage)
+            Thread {
+                if (selectedImage != null) {
+                    val inputStream = contentResolver.openInputStream(selectedImage)
+                    val file = File(
+                            getExternalFilesDir(Environment.DIRECTORY_PICTURES),
+                            "${System.currentTimeMillis()}.jpg"
+                    )
+                    if (inputStream != null) {
+                        val fos = FileOutputStream(file)
+                        val buffer = ByteArray(1024)
+                        var length = 0
+                        do {
+                            length = inputStream.read(buffer)
+                            if (length > 0) {
+                                fos.write(buffer, 0, length)
+                            } else {
+                                break
+                            }
+                        } while (true)
+                        inputStream.close()
+                        fos.close()
+                    }
+                    mFilePath = file.absolutePath
+                }
+            }.start()
+        }
+    }
+
     fun backPage(view: View) {
         finish()
     }
+
 }
\ No newline at end of file
Index: app/src/main/java/com/hw/hwauthenticate/PersonCenterActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hw.hwauthenticate\n\nimport android.app.Activity\nimport android.app.DatePickerDialog\nimport android.content.Intent\nimport android.graphics.BitmapFactory\nimport android.net.Uri\nimport android.os.Bundle\nimport android.os.Environment\nimport android.provider.MediaStore\nimport android.text.Editable\nimport android.text.TextWatcher\nimport android.view.View\nimport androidx.appcompat.app.AppCompatActivity\nimport com.hw.hwauthenticate.utils.Constants\nimport com.hw.hwauthenticate.utils.SpUtils\nimport kotlinx.android.synthetic.main.activity_person_center.*\nimport java.io.File\nimport java.io.FileOutputStream\nimport java.text.SimpleDateFormat\nimport java.util.*\n\n\nclass PersonCenterActivity : AppCompatActivity() {\n\n    private var mUserId: String = \"\"\n    private val mRequestCode = 999\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_person_center)\n        mUserId = SpUtils.getString(Constants.CURRENT_USER_DATA_KEY)\n        edt_user_name.setText(SpUtils.getString(Constants.USER_NAME_KEY + mUserId))\n        tv_select_birth.text = SpUtils.getString(Constants.USER_BIRTH_KEY + mUserId)\n        iv_head.setImageBitmap(BitmapFactory.decodeFile(SpUtils.getString(Constants.USER_AVATAR_KEY + mUserId)))\n\n        edt_user_name.addTextChangedListener(object : TextWatcher {\n            override fun afterTextChanged(s: Editable?) {\n                SpUtils.putString(Constants.USER_NAME_KEY + mUserId, s?.toString() ?: \"\")\n            }\n\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {\n            }\n\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {\n            }\n\n        })\n    }\n\n    fun backPage(view: View) {\n        finish()\n    }\n\n    fun selectPhoto(view: View) {\n        val intent = Intent(\n            Intent.ACTION_PICK,\n            MediaStore.Images.Media.EXTERNAL_CONTENT_URI\n        )\n        startActivityForResult(intent, mRequestCode)\n    }\n\n    fun selectBirthDate(view: View) {\n        val calendar = Calendar.getInstance()\n        val dataDialog = DatePickerDialog(\n            this, { view, year, month, dayOfMonth ->\n                calendar.set(year, month, dayOfMonth, 0, 0)\n                val date = Date()\n                date.time = calendar.time.time\n                tv_select_birth.text =\n                    SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault()).format(date)\n                SpUtils.putString(\n                    Constants.USER_BIRTH_KEY + mUserId,\n                    tv_select_birth.text.toString()\n                )\n            },\n            calendar[Calendar.YEAR],\n            calendar[Calendar.MONTH],\n            calendar[Calendar.DAY_OF_MONTH]\n        )\n        dataDialog.show()\n    }\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        if (requestCode == mRequestCode && resultCode == Activity.RESULT_OK && null != data) {\n            val selectedImage: Uri? = data.data\n            iv_head.setImageURI(selectedImage)\n            Thread {\n                if (selectedImage != null) {\n                    val inputStream = contentResolver.openInputStream(selectedImage)\n                    val file = File(\n                        getExternalFilesDir(Environment.DIRECTORY_PICTURES),\n                        \"${System.currentTimeMillis()}.jpg\"\n                    )\n                    if (inputStream != null) {\n                        val fos = FileOutputStream(file)\n                        val buffer = ByteArray(1024)\n                        var length = 0\n                        do {\n                            length = inputStream.read(buffer)\n                            if (length > 0) {\n                                fos.write(buffer, 0, length)\n                            } else {\n                                break\n                            }\n                        } while (true)\n                        inputStream.close()\n                        fos.close()\n                    }\n                    SpUtils.putString(Constants.USER_AVATAR_KEY + mUserId, file.absolutePath)\n                }\n            }.start()\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/hw/hwauthenticate/PersonCenterActivity.kt	(revision c814bf5c22e7feb87ff499a4d91153c039a97f12)
+++ app/src/main/java/com/hw/hwauthenticate/PersonCenterActivity.kt	(date 1612713939000)
@@ -24,7 +24,7 @@
 class PersonCenterActivity : AppCompatActivity() {
 
     private var mUserId: String = ""
-    private val mRequestCode = 999
+    private val mRequestCode = 110
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
Index: app/src/main/res/layout/activity_person_center.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    tools:context=\".PersonCenterActivity\"\n    tools:ignore=\"ContentDescription\">\n\n    <ImageView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:onClick=\"backPage\"\n        android:src=\"@drawable/vector_arrow_back\" />\n\n    <ImageView\n        android:id=\"@+id/iv_head\"\n        android:layout_width=\"80dp\"\n        android:layout_height=\"80dp\"\n        android:layout_gravity=\"center_horizontal\"\n        android:layout_marginTop=\"60dp\"\n        android:onClick=\"selectPhoto\"\n        android:background=\"#ddd\"/>\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"152dp\"\n        android:orientation=\"vertical\">\n\n        <EditText\n            android:id=\"@+id/edt_user_name\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:hint=\"@string/prompt_user_name\" />\n\n        <TextView\n            android:id=\"@+id/tv_select_birth\"\n            android:layout_width=\"match_parent\"\n            android:onClick=\"selectBirthDate\"\n            android:layout_height=\"40dp\"\n            android:layout_marginTop=\"5dp\"\n            android:gravity=\"center_vertical\"\n            android:hint=\"@string/select_the_date_of_birth\" />\n\n    </LinearLayout>\n\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_person_center.xml	(revision c814bf5c22e7feb87ff499a4d91153c039a97f12)
+++ app/src/main/res/layout/activity_person_center.xml	(date 1612713312000)
@@ -21,7 +21,7 @@
         android:layout_gravity="center_horizontal"
         android:layout_marginTop="60dp"
         android:onClick="selectPhoto"
-        android:background="#ddd"/>
+        android:src="@drawable/icon_user" />
 
     <LinearLayout
         android:layout_width="match_parent"
Index: app/src/main/java/com/hw/hwauthenticate/LoginActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hw.hwauthenticate\n\nimport android.Manifest\nimport android.content.Intent\nimport android.os.Build\nimport android.os.Bundle\nimport android.text.TextUtils\nimport android.view.View\nimport androidx.appcompat.app.AppCompatActivity\nimport com.hw.hwauthenticate.utils.Constants\nimport com.hw.hwauthenticate.utils.ExpandUtils.toast\nimport com.hw.hwauthenticate.utils.SpUtils\nimport kotlinx.android.synthetic.main.activity_login.*\n\nclass LoginActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_login)\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            requestPermissions(\n                arrayOf(\n                    Manifest.permission.WRITE_EXTERNAL_STORAGE,\n                    Manifest.permission.READ_EXTERNAL_STORAGE\n                ), 999\n            )\n        }\n        val userKey = SpUtils.getString(Constants.CURRENT_USER_DATA_KEY)\n        if (!TextUtils.isEmpty(userKey)) {\n            val psw = SpUtils.getString(userKey)\n            if (!TextUtils.isEmpty(psw)) {\n                startActivity(Intent(this, PersonCenterActivity::class.java))\n//                startActivity(Intent(this, MainActivity::class.java))\n                finish()\n            }\n        }\n    }\n\n    fun login(view: View) {\n        if (TextUtils.isEmpty(username.text)) {\n            toast(this, getString(R.string.action_empty_username))\n            return\n        }\n        if (TextUtils.isEmpty(password.text)) {\n            toast(this, getString(R.string.action_empty_password))\n            return\n        }\n        val psw = SpUtils.getString(username.text.toString())\n        if (psw == (password.text.toString())) {\n            SpUtils.putString(\n                Constants.CURRENT_USER_DATA_KEY, Constants.USER_ID_KEY + username.text.toString()\n            )\n            startActivity(Intent(this, PersonCenterActivity::class.java))\n//            startActivity(Intent(this, MainActivity::class.java))\n            finish()\n            return\n        }\n        toast(this, getString(R.string.action_sign_in_error))\n    }\n\n    fun register(view: View) {\n        startActivity(Intent(this, RegisterActivity::class.java))\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/hw/hwauthenticate/LoginActivity.kt	(revision c814bf5c22e7feb87ff499a4d91153c039a97f12)
+++ app/src/main/java/com/hw/hwauthenticate/LoginActivity.kt	(date 1612715579000)
@@ -14,25 +14,32 @@
 
 class LoginActivity : AppCompatActivity() {
 
+    private val mRequestCode = 100
+
+
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_login)
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
             requestPermissions(
-                arrayOf(
-                    Manifest.permission.WRITE_EXTERNAL_STORAGE,
-                    Manifest.permission.READ_EXTERNAL_STORAGE
-                ), 999
+                    arrayOf(
+                            Manifest.permission.WRITE_EXTERNAL_STORAGE,
+                            Manifest.permission.READ_EXTERNAL_STORAGE
+                    ), 999
             )
         }
-        val userKey = SpUtils.getString(Constants.CURRENT_USER_DATA_KEY)
+        val userId = SpUtils.getString(Constants.USER_ID_KEY)
+        val name = SpUtils.getString(Constants.USER_NAME_KEY + userId)
+        val pws = SpUtils.getString(Constants.USER_PSW_KEY + userId)
+
+       val userKey = SpUtils.getString( Constants.CURRENT_USER_DATA_KEY)
         if (!TextUtils.isEmpty(userKey)) {
-            val psw = SpUtils.getString(userKey)
-            if (!TextUtils.isEmpty(psw)) {
-                startActivity(Intent(this, PersonCenterActivity::class.java))
-//                startActivity(Intent(this, MainActivity::class.java))
-                finish()
-            }
+//            val psw = SpUtils.getString(userKey)
+//            if (!TextUtils.isEmpty(psw)) {
+//                startActivity(Intent(this, PersonCenterActivity::class.java))
+////                startActivity(Intent(this, MainActivity::class.java))
+//                finish()
+//            }
         }
     }
 
@@ -48,10 +55,10 @@
         val psw = SpUtils.getString(username.text.toString())
         if (psw == (password.text.toString())) {
             SpUtils.putString(
-                Constants.CURRENT_USER_DATA_KEY, Constants.USER_ID_KEY + username.text.toString()
+                    Constants.CURRENT_USER_DATA_KEY, Constants.USER_ID_KEY + username.text.toString()
             )
-            startActivity(Intent(this, PersonCenterActivity::class.java))
-//            startActivity(Intent(this, MainActivity::class.java))
+            //startActivity(Intent(this, PersonCenterActivity::class.java))
+            startActivity(Intent(this, MainActivity::class.java))
             finish()
             return
         }
@@ -59,7 +66,15 @@
     }
 
     fun register(view: View) {
-        startActivity(Intent(this, RegisterActivity::class.java))
+        startActivityForResult(Intent(this, RegisterActivity::class.java), mRequestCode)
+    }
+
+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
+        super.onActivityResult(requestCode, resultCode, data)
+        if (resultCode == RESULT_OK && requestCode == mRequestCode) {
+            startActivity(Intent(this, MainActivity::class.java))
+            finish()
+        }
     }
 
 }
\ No newline at end of file
