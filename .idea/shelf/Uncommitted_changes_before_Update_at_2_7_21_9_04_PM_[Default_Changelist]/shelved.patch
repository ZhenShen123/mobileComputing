Index: app/src/main/java/com/hw/hwauthenticate/Bean/ToDoBean.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hw.hwauthenticate.Bean\n\nimport android.os.Parcel\nimport android.os.Parcelable\n\n/**\n * listView data bean\n */\nclass ToDoBean(var read: Boolean = false, val date: String?, val details: String?) : Parcelable {\n\n    constructor(parcel: Parcel) : this(\n        parcel.readByte() != 0.toByte(),\n        parcel.readString(),\n        parcel.readString()\n    ) {\n    }\n\n    override fun writeToParcel(parcel: Parcel, flags: Int) {\n        parcel.writeByte(if (read) 1 else 0)\n        parcel.writeString(date)\n        parcel.writeString(details)\n    }\n\n    override fun describeContents(): Int {\n        return 0\n    }\n\n    companion object CREATOR : Parcelable.Creator<ToDoBean> {\n        override fun createFromParcel(parcel: Parcel): ToDoBean {\n            return ToDoBean(parcel)\n        }\n\n        override fun newArray(size: Int): Array<ToDoBean?> {\n            return arrayOfNulls(size)\n        }\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>US-ASCII
===================================================================
--- app/src/main/java/com/hw/hwauthenticate/Bean/ToDoBean.kt	(revision 715a1b710d750e893eb292a5ae501a599e9d11be)
+++ app/src/main/java/com/hw/hwauthenticate/Bean/ToDoBean.kt	(date 1612702050000)
@@ -6,7 +6,7 @@
 /**
  * listView data bean
  */
-class ToDoBean(var read: Boolean = false, val date: String?, val details: String?) : Parcelable {
+class ToDoBean(var read: Boolean = false, var date: String?, var details: String?) : Parcelable {
 
     constructor(parcel: Parcel) : this(
         parcel.readByte() != 0.toByte(),
Index: app/src/main/java/com/hw/hwauthenticate/EditActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hw.hwauthenticate\n\nimport android.os.Bundle\nimport android.util.Log\nimport androidx.appcompat.app.AppCompatActivity\nimport com.hw.hwauthenticate.Bean.ToDoBean\nimport kotlinx.android.synthetic.main.activity_edit.*\n\nclass EditActivity : AppCompatActivity() {\n\n    companion object {\n\n        const val DATA_KEY = \"EditActivity.key\"\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_edit)\n        ivBackPage.setOnClickListener { finish() }\n        tvAdd.setOnClickListener { Log.d(\"TAG\", \"add\") }\n        val get: ToDoBean? = intent.getParcelableExtra(DATA_KEY)\n        get.let {\n            edTodo.setText(get?.details)\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/hw/hwauthenticate/EditActivity.kt	(revision 715a1b710d750e893eb292a5ae501a599e9d11be)
+++ app/src/main/java/com/hw/hwauthenticate/EditActivity.kt	(date 1612703029000)
@@ -1,27 +1,53 @@
 package com.hw.hwauthenticate
 
+import android.content.Intent
 import android.os.Bundle
+import android.text.TextUtils
 import android.util.Log
 import androidx.appcompat.app.AppCompatActivity
 import com.hw.hwauthenticate.Bean.ToDoBean
 import kotlinx.android.synthetic.main.activity_edit.*
+import org.w3c.dom.Text
 
 class EditActivity : AppCompatActivity() {
 
     companion object {
 
         const val DATA_KEY = "EditActivity.key"
+        const val REFRESH_KEY = "EditActivity.refresh"
     }
+
+    var get: ToDoBean? = null
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_edit)
+        tvAdd.setOnClickListener {
+            val intent = Intent()
+            if (get == null) {
+                if (!TextUtils.isEmpty(edTodo.text)) {
+                    get = ToDoBean(false,"",edTodo.text.toString())
+                    intent.putExtra(DATA_KEY,get)
+                    intent.putExtra(REFRESH_KEY,true)
+                    setResult(RESULT_OK,intent)
+                }
+            }else {
+                if (!TextUtils.isEmpty(edTodo.text)) {
+                    get?.date = ""
+                    get?.details = edTodo.text.toString()
+                    intent.putExtra(DATA_KEY,get)
+                    intent.putExtra(REFRESH_KEY,true)
+                    setResult(RESULT_OK,intent)
+                }
+            }
+
+        }
         ivBackPage.setOnClickListener { finish() }
-        tvAdd.setOnClickListener { Log.d("TAG", "add") }
-        val get: ToDoBean? = intent.getParcelableExtra(DATA_KEY)
+        get = intent.getParcelableExtra(DATA_KEY)
         get.let {
             edTodo.setText(get?.details)
         }
     }
 
+
 }
\ No newline at end of file
Index: app/src/main/java/com/hw/hwauthenticate/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hw.hwauthenticate\n\nimport android.content.Intent\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.hw.hwauthenticate.Bean.ToDoBean\nimport com.hw.hwauthenticate.adaper.ToDoListAdapter\nimport com.hw.hwauthenticate.utils.ExpandUtils.toast\nimport kotlinx.android.synthetic.main.activity_main.*\n\nclass MainActivity : AppCompatActivity() {\n\n    companion object {\n\n        const val ADD_KEY = 100\n    }\n\n    private val list = ArrayList<ToDoBean>()\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n        ivAddItem.setOnClickListener {\n            startActivityForResult(Intent(this@MainActivity, EditActivity::class.java), ADD_KEY)\n        }\n        initListData()\n        listView.adapter = ToDoListAdapter(this, R.layout.item_todo, list)\n        listView.setOnItemClickListener { parent, view, position, id ->\n            toast(this@MainActivity, \"Test\")\n            val get = list[position]\n            val intent = Intent(this@MainActivity, EditActivity::class.java)\n            intent.putExtra(EditActivity.DATA_KEY, get)\n            startActivityForResult(intent, ADD_KEY)\n        }\n    }\n\n    private fun initListData() {\n\n\n    }\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        if (resultCode == RESULT_OK && ADD_KEY == requestCode) {\n            //refresh list\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/hw/hwauthenticate/MainActivity.kt	(revision 715a1b710d750e893eb292a5ae501a599e9d11be)
+++ app/src/main/java/com/hw/hwauthenticate/MainActivity.kt	(date 1612702792000)
@@ -16,6 +16,8 @@
     }
 
     private val list = ArrayList<ToDoBean>()
+    private var toDoListAdapter: ToDoListAdapter? = null
+    private var itemPosition = -1
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
@@ -24,12 +26,13 @@
             startActivityForResult(Intent(this@MainActivity, EditActivity::class.java), ADD_KEY)
         }
         initListData()
-        listView.adapter = ToDoListAdapter(this, R.layout.item_todo, list)
+        toDoListAdapter = ToDoListAdapter(this, R.layout.item_todo, list)
+        listView.adapter = toDoListAdapter
         listView.setOnItemClickListener { parent, view, position, id ->
-            toast(this@MainActivity, "Test")
             val get = list[position]
             val intent = Intent(this@MainActivity, EditActivity::class.java)
             intent.putExtra(EditActivity.DATA_KEY, get)
+            itemPosition = position
             startActivityForResult(intent, ADD_KEY)
         }
     }
@@ -41,8 +44,17 @@
 
     override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
         super.onActivityResult(requestCode, resultCode, data)
-        if (resultCode == RESULT_OK && ADD_KEY == requestCode) {
+        if (resultCode == RESULT_OK && ADD_KEY == requestCode && data != null) {
             //refresh list
+            val refresh = data.getBooleanExtra(EditActivity.REFRESH_KEY, false)
+            if (refresh) {
+                val get: ToDoBean? = data.getParcelableExtra(EditActivity.DATA_KEY)
+                if (get != null) {
+                    list.removeAt(itemPosition)
+                    list.add(itemPosition, get)
+                    toDoListAdapter?.notifyDataSetChanged()
+                }
+            }
         }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/hw/hwauthenticate/LoginActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hw.hwauthenticate\n\nimport android.content.Intent\nimport android.os.Bundle\nimport android.text.TextUtils\nimport android.util.Log\nimport android.view.View\nimport androidx.appcompat.app.AppCompatActivity\nimport com.hw.hwauthenticate.utils.Constants\nimport com.hw.hwauthenticate.utils.ExpandUtils.toast\nimport com.hw.hwauthenticate.utils.RemindSQLite\nimport com.hw.hwauthenticate.utils.SpUtils\nimport kotlinx.android.synthetic.main.activity_login.*\n\nclass LoginActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_login)\n        val userKey = SpUtils.getString(Constants.CURRENT_USER_DATA_KEY);\n        if (!TextUtils.isEmpty(userKey)) {\n            val psw = SpUtils.getString(userKey)\n            if (!TextUtils.isEmpty(psw)) {\n                startActivity(Intent(this, MainActivity::class.java))\n            }\n        }\n//\n//        RemindSQLite.addRemindData(RemindSQLite.RemindData(\"xxx\", System.currentTimeMillis()))\n//        RemindSQLite.addRemindData(RemindSQLite.RemindData(\"2222\", System.currentTimeMillis()))\n//        RemindSQLite.addRemindData(RemindSQLite.RemindData(\"2222\", System.currentTimeMillis()))\n//\n//        val list = RemindSQLite.getAllList()\n//        list.forEach {\n//            Log.i(\"DMUI\", \"sql: ${it.id}   $it\")\n//        }\n//\n//        RemindSQLite.deleteRemindData(2)\n//\n//        RemindSQLite.updateRemindData(1, RemindSQLite.RemindData(\"888\", System.currentTimeMillis()))\n//\n//        RemindSQLite.addRemindData(RemindSQLite.RemindData(\"333\", System.currentTimeMillis()))\n//\n//        val list2 = RemindSQLite.getAllList()\n//        list2.forEach {\n//            Log.i(\"DMUI\", \"sql2: ${it.id}   $it\")\n//        }\n//\n    }\n\n    fun login(view: View) {\n        if (TextUtils.isEmpty(username.text)) {\n            toast(this, getString(R.string.action_empty_username))\n            return\n        }\n        if (TextUtils.isEmpty(password.text)) {\n            toast(this, getString(R.string.action_empty_password))\n            return\n        }\n        val psw = SpUtils.getString(username.text.toString())\n        if (psw == (password.text.toString())) {\n            startActivity(Intent(this, MainActivity::class.java))\n            return\n        }\n        SpUtils.putString(Constants.CURRENT_USER_DATA_KEY, username.text.toString())\n        toast(this, getString(R.string.action_sign_in_error))\n    }\n\n    fun register(view: View) {\n        startActivity(Intent(this, RegisterActivity::class.java))\n\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/hw/hwauthenticate/LoginActivity.kt	(revision 715a1b710d750e893eb292a5ae501a599e9d11be)
+++ app/src/main/java/com/hw/hwauthenticate/LoginActivity.kt	(date 1612702950000)
@@ -58,10 +58,10 @@
         }
         val psw = SpUtils.getString(username.text.toString())
         if (psw == (password.text.toString())) {
+            SpUtils.putString(Constants.CURRENT_USER_DATA_KEY, username.text.toString())
             startActivity(Intent(this, MainActivity::class.java))
             return
         }
-        SpUtils.putString(Constants.CURRENT_USER_DATA_KEY, username.text.toString())
         toast(this, getString(R.string.action_sign_in_error))
     }
 
